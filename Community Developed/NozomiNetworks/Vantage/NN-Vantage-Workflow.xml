<?xml version="1.0" encoding="UTF-8" ?>
<!--
Vantage API documentation
https://endpoint/api-docs/index.html
Vantage APIkey panel
https://endpoint/users/me#apikeys
To obtain api key go to the link above,
in the 'Generate new API key' section add 'Description' and 'Allowed IPS'.
Then click the on "Generate" and you get the Key Name and Key Token.
-->

<Workflow name="NN-Vantage" version="1.0" minimumRecurrence="180" xmlns="http://qradar.ibm.com/UniversalCloudRESTAPI/Workflow/V1">
  <Parameters>
    <Parameter name="host" label="Host" required="true" />
    <Parameter name="org" label="Organization" required="true" />
    <Parameter name="key_name" label="Key Name" required="true" />
    <Parameter name="key_token" label="Key Token" required="true" secret="true" />
  </Parameters>

  <Actions>
<!--        <Initialize path="/bookmark_alert" value="0" />-->
    <Initialize path="/bookmark_alert" value="${time() - 3600000}" />
<!--        <Initialize path="/bookmark_assets" value="0" />-->
    <Initialize path="/bookmark_assets" value="${time() - 3600000}" />
    <Initialize path="/size" value="500" />
    <Initialize path="/alert_page" value="1" />
    <Initialize path="/asset_page" value="1" />
    <Initialize path="/first_run_alert" value="true" />
    <Initialize path="/first_run_asset" value="true" />

    <CallEndpoint url="https://${/host}/api/v1/keys/sign_in" method="POST" savePath="/sign_in">
      <RequestBody type="application/json" encoding="UTF-8">{ "key_name": "${/key_name}", "key_token": "${/key_token}" }</RequestBody>
    </CallEndpoint>

    <If condition="/sign_in/status_code != 200">
      <Log type="ERROR" message="NN Vantage sign_in fail" />
      <Abort reason="${/sign_in/response/body/code}: ${/sign_in/response/body/message}" />
    </If>
    <Set path="/bearer_token" value="${/sign_in/headers/Authorization}"/>

    <Log type="INFO" message="NN Vantage Sign in successfully done alert bookmark ${/bookmark_alert} - asset_bookmark ${/bookmark_assets}" />

    <!--  Find organization id from org name passed -->
    <CallEndpoint url="https://${/host}/api/v1/admin/organizations?filter[name]=${/org}" method="GET" savePath="/organizations">
      <RequestHeader name="Authorization" value="${/bearer_token}"/>
    </CallEndpoint>

    <If condition="/organizations/status_code != 200">
      <Log type="ERROR" message="NN Vantage organizations call fail" />
      <Abort reason="${/organizations/response/body/code}: ${/organizations/response/body/message}" />
    </If>

    <If condition="${count(/organizations/body/data)} = 0">
      <Log type="ERROR" message="NN Vantage organization not found" />
      <Abort reason="No organization found for ${/org}" />
    </If>

    <Set path="/org_id" value="${/organizations/body/data[0]/id}"/>

    <Log type="INFO" message="NN Vantage Organization id found from org name ${/org}" />

    <!--  GET ALERTS-->
    <DoWhile condition="${/first_run_alert} = true or ${count(/alerts/body/data)} = ${/size}">
      <Log type="INFO" message="NN Vantage Alerts alert_page ${/alert_page} and bookmark ${/bookmark_alert}" />
      <CallEndpoint url="https://${/host}/api/v1/alerts" method="GET" savePath="/alerts">
        <QueryParameter name="size" value="${/size}"/>
        <QueryParameter name="page" value="${/alert_page}"/>
        <QueryParameter name="sort[record_created_at]" value="asc"/>
        <QueryParameter name="filter[record_created_at][gt]" value="${/bookmark_alert}" omitIfEmpty="true"/>
        <QueryParameter name="skip_total_count" value="true"/>
        <RequestHeader name="Authorization" value="${/bearer_token}"/>
        <RequestHeader name="Vantage-Org" value="${/org_id}"/>
      </CallEndpoint>

      <If condition="/alerts/status_code != 200">
        <Log type="ERROR" message="NN Vantage alerts fail status code ${/alerts/status_code}" />
        <Abort reason="${/alerts/status_code}"/>
      </If>

      <PostEvents path="/alerts/body/data" source="${/host}" />

      <Set path="/first_run_alert" value="false" />
      <Set path="/alert_page" value="${/alert_page + 1}" />

      <If condition="${count(/alerts/body/data)} != ${/size}">
        <Set path="/alert_page" value="1" />
        <Log type="INFO" message="NN Vantage Alerts alert_page rollback ${/alert_page}" />
        <If condition="max(/alerts/body/data/attributes/record_created_at) != null">
          <Set path="/bookmark_alert" value="${max(/alerts/body/data/attributes/record_created_at)}" />
          <Log type="INFO" message="NN Vantage Alerts bookmark upgraded to ${/bookmark_alert}" />
        </If>
      </If>

      <Log type="INFO" message="NN Vantage Alerts notified count => ${count(/alerts/body/data)}" />
    </DoWhile>

    <!--    GET ASSETS-->
    <DoWhile condition="${/first_run_asset} = true or ${count(/assets/body/data)} = ${/size}">
      <Log type="INFO" message="NN Vantage Assets asset_page ${/asset_page} and bookmark ${/bookmark_assets}" />
      <CallEndpoint url="https://${/host}/api/v1/assets" method="GET" savePath="/assets">
        <QueryParameter name="size" value="${/size}"/>
        <QueryParameter name="page" value="${/asset_page}"/>
        <QueryParameter name="sort[created_at]" value="asc"/>
        <QueryParameter name="filter[created_at][gt]" value="${/bookmark_assets}" omitIfEmpty="true"/>
        <QueryParameter name="skip_total_count" value="true"/>
        <RequestHeader name="Authorization" value="${/bearer_token}"/>
        <RequestHeader name="Vantage-Org" value="${/org_id}"/>
      </CallEndpoint>

      <If condition="/assets/status_code != 200">
        <Log type="ERROR" message="NN Vantage assets fail" />
        <Abort reason="${/assets/status_code}"/>
      </If>

      <PostEvents path="/assets/body/data" source="${/host}" />

      <Set path="/first_run_asset" value="false" />
      <Set path="/asset_page" value="${/asset_page + 1}" />

      <If condition="${count(/assets/body/data)} != ${/size}">
        <Set path="/asset_page" value="1" />
        <Log type="INFO" message="NN Vantage Assets asset_page rollback ${/asset_page}" />
        <If condition="max(/assets/body/data/attributes/created_at) != null">
          <Set path="/bookmark_assets" value="${max(/assets/body/data/attributes/created_at)}" />
          <Log type="INFO" message="NN Vantage Assets bookmark_assets upgraded to ${/bookmark_assets}" />
        </If>
      </If>
      <Log type="INFO" message="NN Vantage Assets notified count => ${count(/assets/body/data)}" />
    </DoWhile>
  </Actions>
  <Tests>
    <DNSResolutionTest host="${/host}" />
    <TCPConnectionTest host="${/host}" />
    <SSLHandshakeTest host="${/host}" />
    <HTTPConnectionThroughProxyTest url="https://${/host}" />
  </Tests>
</Workflow>
