<?xml version="1.0" encoding="UTF-8" ?>
<!--

Author : Rohan Parab @encryptedguy / Nico de Smidt @nds
Product : 1Password
Description : Set log source identifier as onepassword_custom

-->
<Workflow name="1Password" version="1.1" minimumRecurrence="5" xmlns="http://qradar.ibm.com/UniversalCloudRESTAPI/Workflow/V2" >


    <Parameters>
		<Parameter name="app_url" label="app_url" required="true" />
		<Parameter name="token" label="token" required="true" />
    </Parameters>

	<!-- Parameters>
    	<Parameter name="token"        label="API Token"  secret="true" required="true" />
	    <Parameter name="app_url"      label="API URL"    default="events.1password.com/api/"/> 
    	<Parameter name="app_method"   label="API Method" default="v1/auditevents" />  
	</Parameters -->


    <Actions>
		<Initialize path="/workflowname" value="1Passsword" />
		<Log type="INFO" message="${/workflowname}: START" />
		<Set path="/log_source_identifier" value="onepassword_custom" />
	
	    <Initialize path="/keep/lastUUID" value="" /> <!-- init UUID if not set already -->     
		<Initialize path="/work/lastUUID" value="" /> <!-- init UUID if not set already -->     

		<Set path="/work/limit" value="1" />   <!-- init limit if not set already --> 
		<Set path="/work/next_cursor" value="" /> <!-- push for a reset_cursor -->
		<Set path="/work/stopWhileLoop" value="0" />
	
	    <!-- Call the endpoint to see if we can get a newer (single) entry -->
		<!-- This assumes that the first record we get back is also the latest and everything down from here is older -->
	    <Log type="DEBUG" message="${/workflowname}: GET FIRST 1 EVENTS" />


        <While condition="/work/stopWhileLoop = 0" > <!-- There are still events to post to QRadar / make sure not to use the /work/ce as these contain only the logins -->
            <Log type="DEBUG" message="${/workflowname}: IN WHILE LOOP" />
            <CallEndpoint url="https://events.1password.com/api/v1/auditevents" method="POST" savePath="/get_events">
                <!-- SSLConfiguration allowUntrustedServerCertificate="true" /-->
				<QueryParameter name="cursor"        value="${/work/next_cursor}" omitIfEmpty="true" />
                <QueryParameter name="limit"         value="${/work/limit}" /> <!-- or <RequestHeader name="limit" value="20"/>  get 20 records -->
                <RequestHeader  name="Authorization" value="Bearer ${/api_key}"/>
                <RequestHeader  name="Content-Type"  value="application/json" />   
                <RequestHeader  name="User-Agent"    value="IBM-QRadar/2.0" />
            </CallEndpoint>

	    	<Log type="DEBUG" message="${/workflowname}: we good ? ${/get_events}" />
		
			<If condition="/get_events/status_code != 200">
				<Abort reason="${/get_events/status_code} : ${/get_events/status_message} \n ${/get_events/body}" />
        	</If>

			<Initialize path="/work/lastUUID" value="${/ce/uuid}"/> <!-- move the new eventUUID to work, use `Initialize` as we only want the latest entry    -->

    		<!-- did we get a record back  -->
			<Log type="DEBUG" message="${/workflowname}: first pull found ${count(/get_events/body/items)} records" />

    		<If condition="${count(/get_events/body/items)} == 0" >
    	    	<Abort reason="${/workflowname}: no records found" />
    		</If>

            <!-- Post Events util we find the lastUUID -->
            <ForEach item="/ce" items="/get_events/body/items" >
                <Log type="DEBUG" message="${/workflowname}: Start posting events to QRadar pipeline" />
                <If condition="/ce/uuid != /keep/lastUUID" > 
                    <!-- do this when we got newer timestamps and the eventhash is not already the last (/keep/lastUUID) -->
                    <Log type="DEBUG" message="${/workflowname}: posting event to QRadar pipeline" />
                    <Log type="DEBUG" message="${/workflowname}: CE = ${/ce}" />
                    <PostEvent path="/ce" source="${/log_source_identifier}"/> <!-- let's post it to the QRadar eventPipeline -->
                </If>
                <Else>
                    <Log type="DEBUG" message="/keep/lastUUID found, skipping rest" />
                    <Set path="/work/stopWhileLoop" value="1" /> <!-- stop while loop after ForEach finishes-->
                </Else>
			</ForEach>

			<If condition="/get_events/body/has_more != true" >  <!-- we have no more pages -->
				<Set path="/work/stopWhileLoop" value="1" /> <!-- stop while loop after ForEach finishes-->
			</If>
			<Else> <!-- we DO have more pages -->
				<Set path="/work/limit" value="20" />   <!-- update limit to get more records at once -->
				<Set path="/work/next_cursor" value="${/get_events/body/cursor}" />   <!-- update next cursor -->
			</Else>

			<Set path="/keep/lastUUID" value="${/work/lastUUID}" /> <!-- move the newest UUID to keep-->

			<Log type="DEBUG" message="return to start of while loop" />
		</While>
		<Log type="INFO" message="${/workflowname}: END" />
	</Actions>
	
	<Tests>
		<DNSResolutionTest host="${/app_url}"/>
		<TCPConnectionTest host="${/app_url}"/>
		<!--<SSLHandshakeTest host="${/app_url}" />
		<HTTPConnectionThroughProxyTest url="https://${/app_url}"/>-->
	</Tests>
</Workflow>
